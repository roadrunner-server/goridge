name: Linux

on:
  push:
    branches:
      - master
      - beta
      - stable
    tags-ignore:
      - '**'
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'


jobs:
  build:
    name: Tests [Go ${{ matrix.go }} OS ${{ matrix.os }}]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        go: [ 1.18 ]
        os: [ ubuntu-latest ]
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Init Go modules Cache # Docs: <https://git.io/JfAKn#go---modules>
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Run golang tests on Linux with codecov
        run: |
          mkdir ./coverage-ci
          go test -v -race -cover -tags=debug -coverpkg=./... -coverprofile=./coverage-ci/frame.txt -covermode=atomic ./pkg/frame
          go test -v -race -cover -tags=debug -coverpkg=./... -coverprofile=./coverage-ci/pipe.txt -covermode=atomic ./pkg/pipe
          go test -v -race -cover -tags=debug -coverpkg=./... -coverprofile=./coverage-ci/rpc.txt -covermode=atomic ./pkg/rpc
          go test -v -race -cover -tags=debug -coverpkg=./... -coverprofile=./coverage-ci/socket.txt -covermode=atomic ./pkg/socket
          cat ./coverage-ci/*.txt > ./coverage-ci/summary.txt

      - uses: codecov/codecov-action@v2 # Docs: <https://github.com/codecov/codecov-action>
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-ci/summary.txt
          fail_ci_if_error: false
