name: CI

on:
  push:
  pull_request:

jobs:
  build:
    name: Build (Go ${{ matrix.go }})
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        go: [1.14, 1.15]
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Init Go modules Cache # Docs: <https://git.io/JfAKn#go---modules>
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -cover -coverprofile=goridge.txt -covermode=atomic

      - uses: codecov/codecov-action@v1 # Docs: <https://github.com/codecov/codecov-action>
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./goridge.txt
          fail_ci_if_error: false

  golangci-check:
    name: Golang-CI (lint)
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1 # action page: <https://github.com/reviewdog/action-golangci-lint>
        with:
          github_token: ${{ secrets.github_token }}
